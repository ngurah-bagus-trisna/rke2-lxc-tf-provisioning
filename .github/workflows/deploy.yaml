name: Terraform Auto Deploy

on:
  workflow_dispatch:

jobs:
  deploy-lab:
    runs-on: ubuntu-latest
    env: 
      USER: ${{ secrets.SSH_USERNAME }}
      HOST: ${{ secrets.SSH_HOST }}
      REPO_NAME: ${{ vars.REPO_NAME }}
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUB_KEY }}
    steps:
      - name: Clone and execute on remote lab
        uses: and-fm/cloudflared-ssh-action@v3
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USER }}
          private_key_value: ${{ secrets.SSH_PRIVATE_KEY_VALUE }}
          private_key_filename: ${{ secrets.SSH_PRIVATE_KEY_FILENAME }}
          port: 22
          commands: |
            echo "🧹 Destroying old infrastructure..."
            cd /home/${{ env.USER }}/lab-rke/${{ env.REPO_NAME}} && tofu destroy -auto-approve || true

            echo "🗑️ Removing and recreating directory..."
            rm -rf /home/${{ env.USER }}/lab-rke
            mkdir -p /home/${{ env.USER }}/lab-rke

            echo "📥 Cloning latest repo..."
            cd /home/${{ env.USER }}/lab-rke
            git clone ${{ github.server_url }}/${{ github.repository }}.git
            cd /home/${{ env.USER }}/lab-rke/${{ env.REPO_NAME}}
            git checkout k3s-lab

            echo "🚀 Running Terraform init & apply with SSH pubkey..."
            echo "TF_VAR_ssh_public_key=\"${TF_VAR_ssh_public_key}\"" >> terraform.auto.tfvars
            tofu init
            tofu apply -auto-approve

            echo "📦 Installing K3s Ansible collection..."
            ansible-galaxy collection install git+https://github.com/k3s-io/k3s-ansible.git

            echo "📡 Running K3s orchestration playbook..."
            cd /home/${{ env.USER }}/lab-rke/${{ env.REPO_NAME}}/ansible
            ansible-playbook k3s.orchestration.site -i hosts.yml --extra-vars "secrets={'TOKEN_K3S': '${{ secrets.TOKEN_K3S }}'}"